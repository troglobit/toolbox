#!/bin/sh
yorn=
file=
dev=

error()
{
    printf "\033[1;31mError: %s\033[0m\n" "$*" >&2
}

fatal()
{
    error "$*"
    exit 1
}

note()
{
    printf "\033[1m%s\033[0m\n" "$*"
}

warn()
{
    printf "\033[1;33mWARNING: %s\033[0m\n" "$*" >&2
}

usage()
{
    if [ $# -gt 0 ]; then
	error "$*"
    fi
    echo "Usage: flash [-y] DEV FILE    Write FILE to DEV" >&2
    echo "       flash [-y] FILE        Guess SD card device" >&2
    echo
    echo "Writes an image file to a block device."
    exit 1
}

yorn()
{
    [ -n "$yorn" ] && return 0

    printf "\033[1;33m%s, are you sure (y/N)?\033[0m " "$1"
    cooked=$(stty -g)
    stty raw; yorn=$(dd bs=1 count=1 2>/dev/null)
    stty "$cooked"; printf "\r\033[2K"

    [ "$yorn" = "y" ] || [ "$yorn" = "Y" ]
}

# Check for required programs
for proggy in lsblk mountpoint
 do
    if ! command -v $proggy >/dev/null 2>&1; then
        fatal "$proggy not found, required."
    fi
done

while getopts "y" opt; do
    case "$opt" in
        y) yorn=y ;;
        \?) usage ;;
    esac
done

# Guess device node if only file given and possible
if [ $# -eq 2 ]; then
    dev=$1
    file=$2
elif [ $# -eq 1 ]; then
    file=$1

    guess_dev=$(lsblk -ndo NAME,RM,MOUNTPOINT | awk '$2=="1" && $3=="" { print $1 }')
    count=$(printf "%s\n" "$guess_dev" | wc -l)

    if [ "$count" -eq 1 ]; then
        dev="/dev/$(printf "%s" "$guess_dev")"
        note "Guessed SD card device: $dev"
    else
        fatal "Unable to safely guess SD card device. Please specify device."
    fi
else
    usage "Too many arguments."
fi

[ -n "$dev" ]  || usage "No block device given."
[ -n "$file" ] || usage "No image file given."
[ -b "$dev" ]  || usage "$dev is not a block device."
[ -f "$file" ] || usage "$file does not exist or is not a file."

case "$dev" in
    /dev/sd[a-z][0-9]*     | \
    /dev/sd[a-z]           | \
    /dev/nvme[0-9]n[0-9]p* | \
    /dev/nvme[0-9]n[0-9]   | \
    /dev/vda[0-9]*         | \
    /dev/vda               | \
    /dev/root)
        warn "$dev looks like a main system drive!"
        yorn "Flash to $dev" || exit 1
        ;;
esac

if mountpoint -q "$dev" 2>/dev/null; then
    fatal "$dev is mounted. Unmount before proceeding."
fi

yorn "Write $file to block device $dev" || exit 0
note "Writing $file to $dev..."
if ! dd if="$file" of="$dev" bs=1M status=progress oflag=direct conv=fsync; then
    fatal "dd failed to write image."
fi

note "Done."
exit 0
